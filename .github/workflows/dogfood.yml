name: Dogfood

on:
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write

jobs:
  simulate-migration:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        
      - name: Install pnpm
        uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
          
      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.3
        with:
          node-version: 22
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build all packages
        run: pnpm build
        
      - name: Test configuration parsing
        run: |
          echo "Testing Hachiko configuration parsing..."
          pnpm exec tsx -e "
            import { validateHachikoConfig } from './dist/config/schema.js';
            import { readFileSync } from 'fs';
            import yaml from 'js-yaml';
            
            const config = yaml.load(readFileSync('./examples/.hachiko.yml', 'utf8'));
            const valid = validateHachikoConfig(config);
            console.log('‚úÖ Configuration is valid:', valid.plans.directory);
          "
          
      - name: Test migration plan parsing
        run: |
          echo "Testing migration plan parsing..."
          pnpm exec tsx -e "
            import { parsePlanFile } from './dist/services/plans.js';
            
            parsePlanFile('./examples/migrations/react-class-to-hooks.md').then(result => {
              if (result.isValid) {
                console.log('‚úÖ Migration plan is valid:', result.plan.id);
              } else {
                console.error('‚ùå Plan validation errors:', result.errors);
                process.exit(1);
              }
            });
          "
          
      - name: Simulate webhook events (placeholder)
        run: |
          echo "üöß Webhook simulation not yet implemented"
          echo "This would:"
          echo "  1. Start Probot app in test mode"
          echo "  2. Fire push webhook with sample migration plan"
          echo "  3. Verify Migration Issue creation" 
          echo "  4. Simulate Plan Review PR merge"
          echo "  5. Verify agent dispatch event"
          echo "  6. Assert final state"
          
      - name: Verify example fixtures
        run: |
          echo "Verifying example fixtures exist..."
          test -f examples/fixtures/Button.tsx
          test -f examples/fixtures/Counter.tsx
          test -f examples/fixtures/UserProfile.tsx
          test -f examples/fixtures/package.json
          echo "‚úÖ All React fixtures present"
          
      - name: Summary
        run: |
          echo "üéâ Dogfood simulation completed!"
          echo ""
          echo "Verified:"
          echo "  ‚úÖ Configuration schema validation"
          echo "  ‚úÖ Migration plan parsing"
          echo "  ‚úÖ React example fixtures"
          echo "  üöß End-to-end webhook simulation (TODO)"
          echo ""
          echo "The Hachiko core is ready for basic functionality testing."
